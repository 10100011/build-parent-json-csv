<service-test>
  <unique-id>fervent-bhabha</unique-id>
  <test-client class="embedded-jmx-test-client">
    <shared-components>
      <connections/>
      <services/>
    </shared-components>
    <shared-components-provider>
      <services/>
    </shared-components-provider>
  </test-client>
  <source class="default-config-file-source">
    <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
  </source>
  <helpers/>
  <test-list>
    <unique-id>jetty-json-csv</unique-id>
    <test>
      <unique-id>json-array-to-csv</unique-id>
      <test-case>
        <unique-id>JsonArrayInput</unique-id>
        <input-message-provider>
          <metadata-provider class="empty-metadata-provider"/>
          <payload-provider class="inline-payload-provider">
            <payload><![CDATA[[
 { "key1": "v1", "key2": "v2"},
 { "key1": "av1", "key2": "av2"}
]]]></payload>
          </payload-provider>
        </input-message-provider>
        <assertions>
          <assert-line-payload-equals>
            <line>key1,key2</line>
            <line>v1,v2</line>
            <line>av1,av2</line>
          </assert-line-payload-equals>
        </assertions>
      </test-case>
      <test-case>
        <unique-id>testNonJsonArray</unique-id>
        <input-message-provider>
          <metadata-provider class="empty-metadata-provider"/>
          <payload-provider class="inline-payload-provider">
            <payload><![CDATA[{}]]></payload>
          </payload-provider>
        </input-message-provider>
        <assertions/>
        <expected-exception>
          <class-name>com.adaptris.core.ServiceException</class-name>
        </expected-exception>
      </test-case>
      <service-to-test>
        <source class="default-config-file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>JSON-CSV</channel>
            <workflow>receive-json-return-csv</workflow>
            <service>json-array-to-csv</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>csv-to-json-array</unique-id>
      <test-case>
        <unique-id>csvInput</unique-id>
        <input-message-provider>
          <metadata-provider class="empty-metadata-provider"/>
          <payload-provider class="inline-payload-provider">
            <payload><![CDATA[column1,column2
line1-value1,line1-value2
line2-value1,line2-value2]]></payload>
          </payload-provider>
        </input-message-provider>
        <assertions>
          <assert-jsonpath-equals>
            <json-path>$[0].column1</json-path>
            <value>line1-value1</value>
          </assert-jsonpath-equals>
          <assert-jsonpath-equals>
            <json-path>$[1].column2</json-path>
            <value>line2-value2</value>
          </assert-jsonpath-equals>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="default-config-file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>JSON-CSV</channel>
            <workflow>receive-csv-return-json</workflow>
            <service>csv-to-json-array</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
  </test-list>
</service-test>